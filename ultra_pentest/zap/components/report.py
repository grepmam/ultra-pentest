# The MIT License (MIT)
#
# Copyright (c) 2024 Marco Martel
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import click
from tabulate import tabulate
from zapv2 import ZAPv2

from ultra_pentest.zap.configurations import ReportConfig 
from ultra_pentest.zap.exceptions import ZAPError


class Report:

    def __init__(self, zap: ZAPv2) -> None:
        self._zap = zap

    def show_report_templates(self) -> None:
        templates = self._zap.reports.templates
        click.echo(
            tabulate(
                [[template] for template in templates],
                headers=['Template name'],
                tablefmt='grid',
            )
        )

    def generate(self, config: ReportConfig) -> str:
        result = self._zap.reports.generate(
            title=config.title,
            description=config.description,
            template=config.template,
            reportfilename=config.file_name,
            reportdir=config.path_directory,
            display=config.display,
        )
        click.echo(f'[+] Report output: {result}')
