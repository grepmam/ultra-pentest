# The MIT License (MIT)
#
# Copyright (c) 2024 Marco Martel
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import os
import sys
from typing import ContextManager
from contextlib import contextmanager

import click

from ultra_pentest.zap.exceptions import ZAPError


def basedir_is_accesible(
    ctx: click.core.Context,
    param: str,
    value: str,
) -> bool:
    directory, _ = os.path.split(value)
    if not os.access(directory, os.W_OK):
        raise click.BadParameter(f'Directory "{directory}" not accessible')
    return value

@contextmanager
def zap_error_handler() -> ContextManager[None]:
    try:
        yield
    except ZAPError as ex:
        click.echo(str(ex))
        sys.exit(2)