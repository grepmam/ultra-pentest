# The MIT License (MIT)
#
# Copyright (c) 2024 Marco Martel
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import click

from ultra_pentest.zap import ZAPManager
from ultra_pentest.helpers import zap_error_handler, basedir_is_accesible

@click.command('run-spider', short_help='Start spider.')
@click.argument('url')
@click.option(
    '-q',
    '--quick',
    is_flag=True,
    help='Launch spider without session. (Default: True)',
)
@click.option(
    '-o',
    '--output-url-file',
    type=click.Path(dir_okay=False, writable=True),
    callback=basedir_is_accesible,
    default='/tmp/urls.txt',
    help='Generate file of URLs found by the spider. (Default: /tmp/urls.txt)',
)
@click.pass_obj
def run_spider(
    zap_manager: ZAPManager,
    url: str,
    quick: bool,
    output_url_file: str,
) -> None:
    """Run Spider."""
    click.echo('[+] The Spider has been launched into the field.')
    click.echo('[*] The Spider could take a minutes.')

    with zap_error_handler():
        try:
            if quick:
                zap_manager.spider.scan(target_url=url)
            else:
                zap_manager.spider.scan(
                    target_url=url,
                    user_id=zap_manager.user.id,
                    context_id=zap_manager.context.id
                )
            click.echo('[+] Spider completed.')
        except KeyboardInterrupt:
            zap_manager.spider.stop()
            click.echo('[+] Spider stopped.')

    click.echo('[+] Spider is over.')

    zap_manager.spider.generate_url_file(output_url_file)
    click.echo(f"[+] Generated URL file in {output_url_file}.")