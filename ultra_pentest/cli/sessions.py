# The MIT License (MIT)
#
# Copyright (c) 2024 Marco Martel
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import click

from ultra_pentest.zap import ZAPManager
from ultra_pentest.helpers import zap_error_handler, basedir_is_accesible


@click.group(name='sessions', short_help='Manage sessions.')
@click.pass_context
def session_group(ctx: click.core.Context) -> None:
    """Manage sessions."""
    pass

@session_group.command('new')
@click.pass_obj
def new_session(zap_manager: ZAPManager) -> None:
    """Start a new session."""
    zap_manager.session.new_session()
    click.echo('[+] Session started')

@session_group.command('save')
@click.argument(
    'file-path',
    type=click.Path(dir_okay=False, writable=True),
    callback=basedir_is_accesible,
)
@click.pass_obj
def save_session(zap_manager: ZAPManager, file_path: str) -> None:
    """Save the session."""
    zap_manager.session.save_session(file_path)
    click.echo(f'[+] Session saved: {file_path}')
    
@session_group.command('load')
@click.argument(
    'file-path',
    type=click.Path(
        exists=True,
        file_okay=True,
        dir_okay=False,
    ),
)
@click.pass_obj
def load_session(zap_manager: ZAPManager, file_path: str) -> None:
    """Load a given session."""
    with zap_error_handler():
        zap_manager.session.load_session(file_path)
        click.echo('Session loaded')