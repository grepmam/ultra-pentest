# The MIT License (MIT)
#
# Copyright (c) 2024 Marco Martel
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import click

from ultra_pentest.zap import ZAPManager
from ultra_pentest.helpers import zap_error_handler


@click.command('run-attack', short_help='Start attack.')
@click.argument('url')
@click.option(
    '-f',
    '--on-the-fly',
    is_flag=True,
    help='Launch attack for first depth level.',
)
@click.option(
    '-r',
    '--recurse',
    is_flag=True,
    help='All nodes of the selected one will be used.',
)
@click.pass_obj
def run_attack(
    zap_manager: ZAPManager,
    url: str,
    on_the_fly: bool,
    recurse: bool,
) -> None:
    """Run Attack."""
    click.echo('[*] Running Active Scan. This may take a minutes...')

    with zap_error_handler():
        try:
            zap_manager.active_scan.stop_all_scans()
            zap_manager.active_scan.remove_all_scans()

            if on_the_fly:
                zap_manager.open_url(url)
    
            zap_manager.active_scan.scan(
                target_url=url,
                user_id=zap_manager.user.id,
                context_id=zap_manager.context.id,
                recurse=recurse,
            )
            click.echo('[+] Active Scan completed.')
        except KeyboardInterrupt:
            zap_manager.active_scan.stop()
            click.echo('[+] Active Scan stopped.')

    click.echo('[+] Active Scan is over.')
